import streamlit as st
from connect import get_connection
import pandas as pd

def render_manage_catalog():
    st.title("üì¶ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–∞–ª–æ–≥–æ–º —Ç–æ–≤–∞—Ä–æ–≤")

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
    def add_item(supplier_id, name, description, length, width, height, price):
        if not name or not price:
            st.warning("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è: –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ —Ü–µ–Ω–∞.")
            return
        with get_connection() as conn:
            with conn.cursor() as cur:
                cur.execute(
                    "INSERT INTO catalog (supplier_id, name, description, length, width, height, price) VALUES (%s, %s, %s, %s, %s, %s, %s)",
                    (supplier_id, name, description, length, width, height, price)
                )
                conn.commit()
                st.success("–¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–∞—Ç–∞–ª–æ–≥.")

    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
    def update_item(item_id, name, description, length, width, height, price):
        if not name or not price:
            st.warning("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è: –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ —Ü–µ–Ω–∞.")
            return
        with get_connection() as conn:
            with conn.cursor() as cur:
                cur.execute("SELECT 1 FROM catalog WHERE item_id = %s", (item_id,))
                if not cur.fetchone():
                    st.error("–¢–æ–≤–∞—Ä —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω.")
                    return
                cur.execute("""
                    UPDATE catalog SET name = %s, description = %s, length = %s, width = %s, height = %s, price = %s
                    WHERE item_id = %s
                """, (name, description, length, width, height, price, item_id))
                conn.commit()
                st.success("–¢–æ–≤–∞—Ä –æ–±–Ω–æ–≤–ª—ë–Ω.")

    # –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
    def delete_item(item_id):
        with get_connection() as conn:
            with conn.cursor() as cur:
                cur.execute("SELECT 1 FROM catalog WHERE item_id = %s", (item_id,))
                if not cur.fetchone():
                    st.error("–¢–æ–≤–∞—Ä —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω.")
                    return
                cur.execute("DELETE FROM catalog WHERE item_id = %s", (item_id,))
                conn.commit()
                st.success("–¢–æ–≤–∞—Ä —É–¥–∞–ª—ë–Ω.")

    # –ü—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤
    def view_items():
        with get_connection() as conn:
            with conn.cursor() as cur:
                cur.execute("""
                    SELECT c.name, s.company_name, s.inn, c.description, c.length, c.width, c.height, c.price
                    FROM catalog c
                    JOIN suppliers s ON c.supplier_id = s.supplier_id
                """)
                rows = cur.fetchall()
        df = pd.DataFrame(rows, columns=[
            "–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ", "–ü–æ—Å—Ç–∞–≤—â–∏–∫", "–ò–ù–ù", "–û–ø–∏—Å–∞–Ω–∏–µ",
            "–î–ª–∏–Ω–∞", "–®–∏—Ä–∏–Ω–∞", "–í—ã—Å–æ—Ç–∞", "–¶–µ–Ω–∞"
        ])
        st.dataframe(df, use_container_width=True)

    action = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ", ["–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ç–∞–ª–æ–≥", "–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä", "–ò–∑–º–µ–Ω–∏—Ç—å —Ç–æ–≤–∞—Ä", "–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä"])

    if action == "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ç–∞–ª–æ–≥":
        view_items()

    elif action == "–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä":
        with get_connection() as conn:
            with conn.cursor() as cur:
                cur.execute("SELECT supplier_id, company_name, inn FROM suppliers")
                suppliers = cur.fetchall()
        if not suppliers:
            st.info("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤. –°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤—å—Ç–µ –∏—Ö.")
            return

        supplier_map = {f"{s[1]} (–ò–ù–ù - {s[2]})": s[0] for s in suppliers}
        supplier_choice = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞", list(supplier_map.keys()))
        supplier_id = supplier_map[supplier_choice]

        name = st.text_input("–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞")
        description = st.text_area("–û–ø–∏—Å–∞–Ω–∏–µ")
        length = st.number_input("–î–ª–∏–Ω–∞ (—Å–º)", min_value=0.0)
        width = st.number_input("–®–∏—Ä–∏–Ω–∞ (—Å–º)", min_value=0.0)
        height = st.number_input("–í—ã—Å–æ—Ç–∞ (—Å–º)", min_value=0.0)
        price = st.number_input("–¶–µ–Ω–∞ (—Ä—É–±)", min_value=0.0)

        if st.button("–î–æ–±–∞–≤–∏—Ç—å"):
            add_item(supplier_id, name, description, length, width, height, price)

    elif action == "–ò–∑–º–µ–Ω–∏—Ç—å —Ç–æ–≤–∞—Ä":
        with get_connection() as conn:
            with conn.cursor() as cur:
                cur.execute("""
                    SELECT c.item_id, c.name, s.company_name
                    FROM catalog c
                    JOIN suppliers s ON c.supplier_id = s.supplier_id
                """)
                items = cur.fetchall()

        if not items:
            st.info("–ù–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è.")
            return

        item_map = {f"{i[1]} –æ—Ç {i[2]}": i[0] for i in items}
        selected = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä", list(item_map.keys()))
        item_id = item_map[selected]

        name = st.text_input("–ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞")
        description = st.text_area("–ù–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ")
        length = st.number_input("–ù–æ–≤–∞—è –¥–ª–∏–Ω–∞ (—Å–º)", min_value=0.0)
        width = st.number_input("–ù–æ–≤–∞—è —à–∏—Ä–∏–Ω–∞ (—Å–º)", min_value=0.0)
        height = st.number_input("–ù–æ–≤–∞—è –≤—ã—Å–æ—Ç–∞ (—Å–º)", min_value=0.0)
        price = st.number_input("–ù–æ–≤–∞—è —Ü–µ–Ω–∞ (—Ä—É–±)", min_value=0.0)

        if st.button("–ò–∑–º–µ–Ω–∏—Ç—å"):
            update_item(item_id, name, description, length, width, height, price)

    elif action == "–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä":
        with get_connection() as conn:
            with conn.cursor() as cur:
                cur.execute("""
                    SELECT c.item_id, c.name, s.company_name
                    FROM catalog c
                    JOIN suppliers s ON c.supplier_id = s.supplier_id
                """)
                items = cur.fetchall()

        if not items:
            st.info("–ù–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.")
            return

        item_map = {f"{i[1]} –æ—Ç {i[2]}": i[0] for i in items}
        selected = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è", list(item_map.keys()))
        item_id = item_map[selected]

        if st.button("–£–¥–∞–ª–∏—Ç—å"):
            delete_item(item_id)
