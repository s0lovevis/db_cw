import streamlit as st
from connect import get_connection
import pandas as pd

def render_manage_suppliers():
    st.title("üè¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑–æ–π –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤")

    # –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
    def add_supplier(company_name, inn, ogrn, address_id, dm_id):
        if not company_name or not inn or not ogrn or not address_id or not dm_id:
            st.warning("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è.")
            return
        with get_connection() as conn:
            with conn.cursor() as cur:
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ –ò–ù–ù –∏ –û–ì–†–ù
                cur.execute("SELECT 1 FROM suppliers WHERE inn = %s", (inn,))
                if cur.fetchone():
                    st.error("–ü–æ—Å—Ç–∞–≤—â–∏–∫ —Å —Ç–∞–∫–∏–º –ò–ù–ù —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
                    return
                cur.execute("SELECT 1 FROM suppliers WHERE ogrn = %s", (ogrn,))
                if cur.fetchone():
                    st.error("–ü–æ—Å—Ç–∞–≤—â–∏–∫ —Å —Ç–∞–∫–∏–º –û–ì–†–ù —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
                    return
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è address_id –∏ dm_id
                cur.execute("SELECT 1 FROM legal_addresses WHERE address_id = %s", (address_id,))
                if not cur.fetchone():
                    st.error("–ê–¥—Ä–µ—Å —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω.")
                    return
                cur.execute("SELECT 1 FROM decision_makers WHERE dm_id = %s", (dm_id,))
                if not cur.fetchone():
                    st.error("–õ–ü–† —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω.")
                    return
                cur.execute(
                    "INSERT INTO suppliers (company_name, inn, ogrn, address_id, dm_id) VALUES (%s, %s, %s, %s, %s)",
                    (company_name, inn, ogrn, address_id, dm_id)
                )
                conn.commit()
                st.success("–ü–æ—Å—Ç–∞–≤—â–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω.")

    # –§—É–Ω–∫—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
    def update_supplier(supplier_id, company_name, inn, ogrn, address_id, dm_id):
        if not company_name or not inn or not ogrn or not address_id or not dm_id:
            st.warning("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è.")
            return
        with get_connection() as conn:
            with conn.cursor() as cur:
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
                cur.execute("SELECT 1 FROM suppliers WHERE supplier_id = %s", (supplier_id,))
                if not cur.fetchone():
                    st.error("–ü–æ—Å—Ç–∞–≤—â–∏–∫ —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω.")
                    return
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ –ò–ù–ù –∏ –û–ì–†–ù (–∏—Å–∫–ª—é—á–∞—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞)
                cur.execute("SELECT 1 FROM suppliers WHERE inn = %s AND supplier_id != %s", (inn, supplier_id))
                if cur.fetchone():
                    st.error("–ü–æ—Å—Ç–∞–≤—â–∏–∫ —Å —Ç–∞–∫–∏–º –ò–ù–ù —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
                    return
                cur.execute("SELECT 1 FROM suppliers WHERE ogrn = %s AND supplier_id != %s", (ogrn, supplier_id))
                if cur.fetchone():
                    st.error("–ü–æ—Å—Ç–∞–≤—â–∏–∫ —Å —Ç–∞–∫–∏–º –û–ì–†–ù —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
                    return
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è address_id –∏ dm_id
                cur.execute("SELECT 1 FROM legal_addresses WHERE address_id = %s", (address_id,))
                if not cur.fetchone():
                    st.error("–ê–¥—Ä–µ—Å —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω.")
                    return
                cur.execute("SELECT 1 FROM decision_makers WHERE dm_id = %s", (dm_id,))
                if not cur.fetchone():
                    st.error("–õ–ü–† —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω.")
                    return
                cur.execute(
                    "UPDATE suppliers SET company_name = %s, inn = %s, ogrn = %s, address_id = %s, dm_id = %s WHERE supplier_id = %s",
                    (company_name, inn, ogrn, address_id, dm_id, supplier_id)
                )
                conn.commit()
                st.success("–ü–æ—Å—Ç–∞–≤—â–∏–∫ –æ–±–Ω–æ–≤–ª–µ–Ω.")

    # –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
    def delete_supplier(supplier_id):
        with get_connection() as conn:
            with conn.cursor() as cur:
                cur.execute("SELECT 1 FROM suppliers WHERE supplier_id = %s", (supplier_id,))
                if not cur.fetchone():
                    st.error("–ü–æ—Å—Ç–∞–≤—â–∏–∫ —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω.")
                    return
                cur.execute("DELETE FROM suppliers WHERE supplier_id = %s", (supplier_id,))
                conn.commit()
                st.success("–ü–æ—Å—Ç–∞–≤—â–∏–∫ —É–¥–∞–ª–µ–Ω.")

    # –§—É–Ω–∫—Ü–∏—è –≤—ã–≥—Ä—É–∑–∫–∏ –≤—Å–µ—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤
    def view_suppliers():
        with get_connection() as conn:
            with conn.cursor() as cur:
                cur.execute("""
                    SELECT 
                        s.company_name, s.inn,
                        la.city, la.street, la.house, la.building,
                        dm.last_name, dm.first_name, dm.middle_name, dm.age
                    FROM suppliers s
                    JOIN legal_addresses la ON s.address_id = la.address_id
                    JOIN decision_makers dm ON s.dm_id = dm.dm_id
                """)
                rows = cur.fetchall()
        df = pd.DataFrame(rows, columns=[
            "–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏", "–ò–ù–ù",
            "–ì–æ—Ä–æ–¥", "–£–ª–∏—Ü–∞", "–î–æ–º", "–°—Ç—Ä–æ–µ–Ω–∏–µ",
            "–§–∞–º–∏–ª–∏—è –õ–ü–†", "–ò–º—è –õ–ü–†", "–û—Ç—á–µ—Å—Ç–≤–æ –õ–ü–†", "–í–æ–∑—Ä–∞—Å—Ç –õ–ü–†"
        ])
        st.dataframe(df, use_container_width=True)

    # UI –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞–º–∏
    action = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ", ["–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤", "–î–æ–±–∞–≤–∏—Ç—å –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞", "–ò–∑–º–µ–Ω–∏—Ç—å –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞", "–£–¥–∞–ª–∏—Ç—å –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞"])

    if action == "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤":
        view_suppliers()

    elif action == "–î–æ–±–∞–≤–∏—Ç—å –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞":
        company_name = st.text_input("–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏")
        inn = st.text_input("–ò–ù–ù")
        ogrn = st.text_input("–û–ì–†–ù")

        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∞–¥—Ä–µ—Å–∞
        with get_connection() as conn:
            with conn.cursor() as cur:
                cur.execute("SELECT address_id, city, street, house, building FROM legal_addresses")
                addresses = cur.fetchall()
                cur.execute("SELECT dm_id, last_name, first_name, middle_name FROM decision_makers")
                dms = cur.fetchall()

        if not addresses:
            st.info("–°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤—å—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –∞–¥—Ä–µ—Å.")
            return
        if not dms:
            st.info("–°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤—å—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ–≥–æ –õ–ü–†.")
            return

        address_map = {f"{a[1]}, {a[2]}, {a[3]}, {a[4]}": a[0] for a in addresses}
        address_choice = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –∞–¥—Ä–µ—Å", list(address_map.keys()))
        address_id = address_map[address_choice]

        dm_map = {f"{d[1]} {d[2]} {d[3]}": d[0] for d in dms}
        dm_choice = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –õ–ü–†", list(dm_map.keys()))
        dm_id = dm_map[dm_choice]

        if st.button("–î–æ–±–∞–≤–∏—Ç—å"):
            add_supplier(company_name, inn, ogrn, address_id, dm_id)


    elif action == "–ò–∑–º–µ–Ω–∏—Ç—å –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞":
        with get_connection() as conn:
            with conn.cursor() as cur:
                cur.execute("SELECT supplier_id, company_name, inn FROM suppliers")
                suppliers = cur.fetchall()
                cur.execute("SELECT address_id, city, street, house, building FROM legal_addresses")
                addresses = cur.fetchall()
                cur.execute("SELECT dm_id, last_name, first_name, middle_name FROM decision_makers")
                dms = cur.fetchall()

        if not suppliers:
            st.info("–ù–µ—Ç –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è.")
            return
        if not addresses:
            st.info("–°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤—å—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –∞–¥—Ä–µ—Å.")
            return
        if not dms:
            st.info("–°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤—å—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ–≥–æ –õ–ü–†.")
            return

        supplier_map = {f"{s[1]} (–ò–ù–ù: {s[2]})": s[0] for s in suppliers}
        supplier_choice = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞", list(supplier_map.keys()))
        supplier_id = supplier_map[supplier_choice]

        company_name = st.text_input("–ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏")
        inn = st.text_input("–ù–æ–≤—ã–π –ò–ù–ù")
        ogrn = st.text_input("–ù–æ–≤—ã–π –û–ì–†–ù")

        address_map = {f"{a[1]}, {a[2]}, {a[3]}, {a[4]}": a[0] for a in addresses}
        address_choice = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤—ã–π –∞–¥—Ä–µ—Å", list(address_map.keys()))
        address_id = address_map[address_choice]

        dm_map = {f"{d[1]} {d[2]} {d[3]}": d[0] for d in dms}
        dm_choice = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤–æ–≥–æ –õ–ü–†", list(dm_map.keys()))
        dm_id = dm_map[dm_choice]

        if st.button("–ò–∑–º–µ–Ω–∏—Ç—å"):
            update_supplier(supplier_id, company_name, inn, ogrn, address_id, dm_id)



    elif action == "–£–¥–∞–ª–∏—Ç—å –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞":
        with get_connection() as conn:
            with conn.cursor() as cur:
                cur.execute("SELECT supplier_id, company_name, inn FROM suppliers")
                suppliers = cur.fetchall()

        if not suppliers:
            st.info("–ù–µ—Ç –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.")
            return

        supplier_map = {f"{s[1]} (–ò–ù–ù: {s[2]})": s[0] for s in suppliers}
        selected = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è", list(supplier_map.keys()))
        supplier_id = supplier_map[selected]

        if st.button("–£–¥–∞–ª–∏—Ç—å"):
            delete_supplier(supplier_id)