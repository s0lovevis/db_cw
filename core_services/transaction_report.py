import datetime
import streamlit as st
import pandas as pd
from connect import get_connection


def render_transaction_report():
    st.title("üìä –û—Ç—á—ë—Ç –ø–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–º")
    st.markdown("–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ –¥–ª—è –æ—Ç—á—ë—Ç–∞ –ø–æ —É—Å–ø–µ—à–Ω—ã–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–º:")

    # –í—ã–±–æ—Ä –ø–µ—Ä–∏–æ–¥–∞
    start_date = st.date_input("–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –ø–µ—Ä–∏–æ–¥–∞")
    end_date = st.date_input("–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–µ—Ä–∏–æ–¥–∞", value=start_date)

    if st.button("–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á—ë—Ç"):
        # –ì—Ä–∞–Ω–∏—Ü—ã –ø–µ—Ä–∏–æ–¥–∞
        start_dt = datetime.datetime.combine(start_date, datetime.time.min)
        end_dt   = datetime.datetime.combine(end_date, datetime.time.max)

        # –ó–∞–ø—Ä–æ—Å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
        with get_connection() as conn:
            with conn.cursor() as cur:
                cur.execute(
                    '''
                    SELECT
                        t.transaction_id,
                        t.transaction_time,
                        c.name           AS —Ç–æ–≤–∞—Ä,
                        s.company_name   AS –ø–æ—Å—Ç–∞–≤—â–∏–∫,
                        case when t.operation = '–î–æ–±–∞–≤–∏—Ç—å' then '–ü–æ–∫—É–ø–∫–∞ —É –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞' else '–ü—Ä–æ–¥–∞–∂–∞' end AS –æ–ø–µ—Ä–∞—Ü–∏—è,
                        t.quantity       AS –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ,
                        t.monetary_volume AS –æ–±—ä—ë–º
                    FROM transactions t
                    JOIN catalog c   ON t.item_id = c.item_id
                    JOIN suppliers s ON c.supplier_id = s.supplier_id
                    WHERE t.success = TRUE
                      AND t.transaction_time BETWEEN %s AND %s
                    ORDER BY t.transaction_time
                    ''',
                    (start_dt, end_dt)
                )
                rows = cur.fetchall()

        if not rows:
            st.info("–ó–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –Ω–µ—Ç —É—Å–ø–µ—à–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π.")
            return

        # –§–æ—Ä–º–∏—Ä—É–µ–º DataFrame
        df = pd.DataFrame(rows, columns=[
            "ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏", "–í—Ä–µ–º—è", "–¢–æ–≤–∞—Ä", "–ü–æ—Å—Ç–∞–≤—â–∏–∫",
            "–û–ø–µ—Ä–∞—Ü–∏—è", "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ", "–û–±—ä—ë–º"
        ])

        # –°—á–∏—Ç–∞–µ–º —Å—É–º–º—ã: '–î–æ–±–∞–≤–∏—Ç—å' = —Ç—Ä–∞—Ç–∞ (–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ), '–£–¥–∞–ª–∏—Ç—å' = –¥–æ—Ö–æ–¥ (–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ)
        df["–°—É–º–º–∞ (‚ÇΩ)"] = df.apply(
            lambda r: -r["–û–±—ä—ë–º"] if r["–û–ø–µ—Ä–∞—Ü–∏—è"].lower() == "–ø–æ–∫—É–ø–∫–∞ —É –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞"
                      else r["–û–±—ä—ë–º"],
            axis=1
        )

        # –í—ã–≤–æ–¥ —Ç–∞–±–ª–∏—Ü—ã
        st.dataframe(df.drop(columns=["–û–±—ä—ë–º"]), use_container_width=True)

        # –ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞
        total = df["–°—É–º–º–∞ (‚ÇΩ)"].sum()
        st.markdown(f"**–ò—Ç–æ–≥–æ –∑–∞ –ø–µ—Ä–∏–æ–¥:** {total:,.2f}¬†‚ÇΩ")
