import streamlit as st
from services.auth_service import authenticate_user
from services.access_service import get_access_rights_by_role
from services.add_new_user import render_add_user_form
from services.change_password import render_change_password
from services.delete_user import render_delete_user
from services.view_users import render_view_users


def logout():
    for key in list(st.session_state.keys()):
        del st.session_state[key]
    st.session_state.current_state = "login"
    st.rerun()

def show_login():
    st.title("üîê SRM-—Å–∏—Å—Ç–µ–º–∞ ‚Äî –í—Ö–æ–¥")
    with st.form("login_form"):
        username = st.text_input("–õ–æ–≥–∏–Ω")
        password = st.text_input("–ü–∞—Ä–æ–ª—å", type="password")
        submitted = st.form_submit_button("–í–æ–π—Ç–∏")

        if submitted:
            with st.spinner("‚è≥ –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ..."):
                result = authenticate_user(username, password)
                if result:
                    uname, role, role_desc = result
                    rights = get_access_rights_by_role(role)

                    st.session_state.username = uname
                    st.session_state.role = role
                    st.session_state.role_desc = role_desc
                    st.session_state.access_rights = rights
                    st.session_state.current_state = "welcome"
                    st.rerun()
                else:
                    st.error("–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å")

def show_sidebar():
    st.sidebar.markdown(f"üë§ –í—ã –≤–æ—à–ª–∏ –ø–æ–¥ –ª–æ–≥–∏–Ω–æ–º: **{st.session_state.username}**")
    st.sidebar.markdown(f"üîë –í–∞—à–∞ —Ä–æ–ª—å: **{st.session_state.role_desc}**")
    st.sidebar.markdown("---")

    pages = {description: name for name, description in st.session_state.access_rights}

    selection_description = st.sidebar.radio(
        "üìÇ –†–∞–∑–¥–µ–ª—ã",
        ["–ì–ª–∞–≤–Ω–∞—è"] + list(pages.keys())
    )

    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –æ–±—Ä–∞—Ç–Ω–æ –≤ name
    selection = "welcome" if selection_description == "–ì–ª–∞–≤–Ω–∞—è" else pages[selection_description]
    st.session_state.current_state = selection

    st.sidebar.markdown("---")
    if st.sidebar.button("üö™ –í—ã–π—Ç–∏"):
        logout()

def show_welcome():
    st.title("–î–æ–±—Ä—ã–π –¥–µ–Ω—å!")
    st.markdown(f"""
    –í –º–µ–Ω—é —Å–ª–µ–≤–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å.
    """)

def show_dynamic_page():
    current = st.session_state.current_state
    if current == "add_new_user":
        render_add_user_form()
    elif current == "change_password":
        render_change_password()
    elif current == "delete_user":
        render_delete_user()
    elif current == "view_users":
        render_view_users()
    else:
        st.title(f"üìÑ –†–∞–∑–¥–µ–ª: {current}")
        st.write("–ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å, —Å–≤—è–∑–∞–Ω–Ω–∞—è —Å —ç—Ç–∏–º –¥–æ—Å—Ç—É–ø–æ–º.")



def main():
    st.set_page_config(page_title="SRM-—Å–∏—Å—Ç–µ–º–∞", page_icon="üì¶")

    if "current_state" not in st.session_state:
        st.session_state.current_state = "login"
        st.session_state.username = ""
        st.session_state.role = ""
        st.session_state.access_rights = []

    if st.session_state.current_state == "login":
        show_login()
    else:
        show_sidebar()
        if st.session_state.current_state == "welcome":
            show_welcome()
        else:
            show_dynamic_page()

if __name__ == "__main__":
    main()
